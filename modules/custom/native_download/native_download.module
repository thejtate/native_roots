<?php
/**
 * @file
 *
 * Handles module administration and download link
 */


/**
 * Implements hook_menu().
 */
function native_download_menu() {
  $items = array();
  $items['native-download/%/zip'] = array(
    'page callback' => 'native_download_download_zip',
    'page arguments' => array(1),
    'access arguments' => array('see native download link'),
    'type' => MENU_CALLBACK,
  );
  $items['native-download/%/image'] = array(
    'page callback' => 'native_download_download_image',
    'page arguments' => array(1),
    'access arguments' => array('see native download link'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function native_download_permission() {
  return array(
    'see native download link' => array(
      'title' => t('See Native download link'),
    ),
  );
}

/**
 * Download Zip.
 *
 * @param $fid
 */
function native_download_download_zip($fid) {

  if (empty($fid)) {
    return;
  }

  $lib_path = libraries_get_path('pclzip');

  include $lib_path . '/pclzip.lib.php';

  $file = isset($fid) ? file_load($fid) : '';

  if ($file) {

    $filename = preg_replace("/[^a-zA-Z0-9\.\-_]/", "", $file->filename);
    $archive_name = $filename . '.zip';

    $archive_path = drupal_realpath($file->uri) . '.zip';
    $archive = new PclZip($archive_path);

    $result = $archive->create(drupal_realpath($file->uri), PCLZIP_OPT_REMOVE_ALL_PATH);
    if($result == 0) {
      $error = $archive->errorInfo(true);
      watchdog('native_download', 'Error: %error', array('%error' => $error), WATCHDOG_ERROR, $link = NULL);
    }
    else {
      header("Content-Type: application/force-download");
      header('Content-Description: File Transfer');
      header('Content-Disposition: inline; filename=' . $archive_name);
      readfile($archive_path);
    }
  }
  exit();
}

/**
 * Download Image.
 *
 * @param $fid
 */
function native_download_download_image($fid) {

  if (empty($fid)) {
    return;
  }

  $file = isset($fid) ? file_load($fid) : '';

  if ($file) {
    $file_path = drupal_realpath($file->uri);

    $quoted = sprintf('"%s"', addcslashes(basename($file_path), '"\\'));
    $size   = $file->filesize;

    header('Content-Type: ' . $file->filemime);
    header('Content-Description: File Transfer');
    header('Content-Type: application/octet-stream');
    header('Content-Disposition: attachment; filename=' . $quoted);
    header('Content-Transfer-Encoding: binary');
    header('Connection: Keep-Alive');
    header('Expires: 0');
    header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
    header('Pragma: public');
    header('Content-Length: ' . $size);
    readfile($file_path);
  }
  exit();
}